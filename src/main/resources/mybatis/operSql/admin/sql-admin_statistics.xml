<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd"> 

<mapper namespace="com.soft.web.dao.admin.AdminStatisticsDao">
	<!--  
		page : 페이지, order_nm : 카테고리, reserve_state : 예약상태, 
		srch_reg_s : 방문일 시작, srch_reg_e : 방문일 종료
		srch_pay_s : 결제일 시작, srch_pay_e : 결제일 종료
		srch_point : 지점
	 -->
	<sql id="where">
		<if test = "reserve_uid != null and reserve_uid != ''">
	        AND ORDER_NUM like '%' || #{reserve_uid} || '%'
	    </if>
		<if test = "category != null and category != ''">
			AND ORDER_TP = #{category}
		</if>
		<if test = "srch_reg_s != null and srch_reg_s != '' and srch_reg_e != null and srch_reg_e != ''" >
		 	AND TO_DATE(TO_CHAR(RESERVE_DATE,'YYYYMMDD'), 'YYYYMMDD') BETWEEN TO_DATE( REPLACE(#{srch_reg_s},'.',''), 'YYYYMMDD') AND TO_DATE(REPLACE(#{srch_reg_e},'.',''), 'YYYYMMDD')
		</if>
		<if test = "srch_pay_s != null and srch_pay_s != '' and srch_pay_e != null and srch_pay_e != ''" >
		 	AND TO_DATE(TO_CHAR(PAYMENT_DATE,'YYYYMMDD'), 'YYYYMMDD') BETWEEN TO_DATE( REPLACE(#{srch_pay_s},'.',''), 'YYYYMMDD') AND TO_DATE(REPLACE(#{srch_pay_e},'.',''), 'YYYYMMDD')
		</if>
		<if test = "reserve_state != null and reserve_state != ''" >
		 	AND RESERVE_STATE =  #{reserve_state}
		</if>
		<if test = "noPmtYN == null or noPmtYN == ''">
			AND RESERVE_STATE != 'NOPMT'
		</if>
		<if test = "srch_point != null and srch_point != ''" >
			AND POINT_CODE = #{srch_point}
		</if>
		<if test = "mem_nm != null and mem_nm != ''">
			AND xx1.dec_varchar2_sel(MEM_NM, 10, 'NAME')		like '%' || UTL_RAW.CAST_TO_VARCHAR2(#{mem_nm}) || '%'
		</if>
		<if test = "mem_mobile != null and mem_mobile != ''">
			AND xx1.dec_varchar2_sel(MOBILE_NUM, 10, 'PHONE') like '%' || UTL_RAW.CAST_TO_VARCHAR2(#{srch_text_HEX}) || '%' 
			AND ROW_TO_STR(MEM_MOBILE) like '%' || #{mem_mobile} || '%' 
		</if>
		<if test = "payment_type != null and payment_type != ''">
			AND PAYMENT_TYPE = #{payment_type}
		</if> 
		<if test = "item_type != null and item_type != ''">
			AND ${item_type} IS NOT NULL
		</if> 
	</sql>
	
	
	<sql id="whereGeneral">
		<if test = "order_tp != null and order_tp != ''" >
			AND ORDER_TP = #{order_tp}
		</if>
		<if test = "reserve_state != null and reserve_state != ''" >
			AND RESERVE_STATE = #{reserve_state}
		</if>
		<if test = "srch_point != null and srch_point != ''" >
			AND POINT_CODE = #{srch_point}
		</if>
		<if test = "srch_reg_s != null and srch_reg_s != '' and srch_reg_e != null and srch_reg_e != ''" >
		 	AND TO_DATE(TO_CHAR(RESERVE_DATE,'YYYYMMDD'), 'YYYYMMDD') BETWEEN TO_DATE( REPLACE(#{srch_reg_s},'.',''), 'YYYYMMDD') AND TO_DATE(REPLACE(#{srch_reg_e},'.',''), 'YYYYMMDD')
		</if>
		<if test = "srch_pay_s != null and srch_pay_s != '' and srch_pay_e != null and srch_pay_e != ''" >
		 	AND TO_DATE(TO_CHAR(PAYMENT_DATE,'YYYYMMDD'), 'YYYYMMDD') BETWEEN TO_DATE( REPLACE(#{srch_pay_s},'.',''), 'YYYYMMDD') AND TO_DATE(REPLACE(#{srch_pay_e},'.',''), 'YYYYMMDD')
		</if>
	</sql>
	
  <!-- 구간별 접속통계 -->
  <select id="listVisitorPeriod" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT
      iYears, LPAD(iMonths,2,0) AS iMonths, LPAD(iDays,2,0) AS iDays, iWeeks, pageViewCnt, visitorCnt
    FROM TB_SATATISTICS_VISITOR
    WHERE 1=1
      AND (iYears || LPAD(iMonths,2,0) || LPAD(iDays,2,0)) BETWEEN #{sd} AND #{ed}
    ORDER BY instDate ASC
  </select>
  
  <!-- 시간 접속통계 -->
  <select id="listVisitorTime" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT
      iYears, LPAD(iMonths,2,0) AS iMonths, LPAD(iDays,2,0) AS iDays, iWeeks, pageViewCnt, visitorCnt, hour_00, hour_01, hour_02, hour_03, hour_04, hour_05, hour_06, hour_07, hour_08, hour_09, hour_10, hour_11, hour_12, hour_13, hour_14, hour_15, hour_16, hour_17, hour_18, hour_19, hour_20, hour_21, hour_22, hour_23
    FROM TB_SATATISTICS_VISITOR
    WHERE iYears = #{yy}
      AND iMonths = #{mm}
      AND iDays = #{dd}
    ORDER BY instDate ASC
  </select>
  
  <!-- 일 접속통계 -->
  <select id="listVisitorDay" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT
      iYears, LPAD(iMonths,2,0) AS iMonths, LPAD(iDays,2,0) AS iDays, iWeeks, pageViewCnt, visitorCnt
    FROM TB_SATATISTICS_VISITOR
    WHERE iYears = #{yy}
      AND iMonths = #{mm}
    ORDER BY instDate ASC
  </select>

  <!-- 월 접속통계 -->
  <select id="listVisitorMonth" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT
      LPAD(iMonths,2,0) AS iMonths, SUM(pcCnt) AS pcCnt, SUM(mobileCnt) AS mobileCnt, SUM(pageViewCnt) AS pageViewCnt, SUM(visitorCnt) AS visitorCnt
    FROM TB_SATATISTICS_VISITOR
    WHERE iYears = #{yy}
     GROUP BY iMonths
     ORDER BY iMonths ASC
  </select>
  
  <!-- OS 접속통계 -->
  <select id="listVisitorOs" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT
      os, cnt
    FROM TB_SATATISTICS_VISITOR_OS
    ORDER BY cnt DESC
  </select>
  
  <!-- DEVICE 접속통계 -->
  <select id="listVisitorDevice" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT
      device, cnt
    FROM TB_SATATISTICS_VISITOR_DEVICE
    ORDER BY cnt DESC
  </select>

  <!-- BROWSER 접속통계 -->
  <select id="listVisitorBrowser" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT
      browser, cnt
    FROM TB_SATATISTICS_VISITOR_BROWSER
    ORDER BY cnt DESC
  </select>
  
  <!-- SCREEN 접속통계 -->
  <select id="listVisitorScreen" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT
      (screen_x || 'x' || screen_y) AS screen_xy, cnt
    FROM TB_SATATISTICS_VISITOR_SCREEN
    ORDER BY cnt DESC
  </select>

  
  <!-- 경로 전체 카운트 -->
  <select id="getTotalCountReferer" parameterType="java.util.Map" resultType="int">
    SELECT COUNT(*)
	  FROM TB_SATATISTICS_VISITOR_REFERER
  </select>

  <!-- 경로별 통계 -->
  <select id="listVisitorReferer" parameterType="java.util.Map" resultType="java.util.HashMap">
	SELECT
           REFERER
         , cnt
	  FROM TB_SATATISTICS_VISITOR_REFERER
	 ORDER BY cnt DESC
	 LIMIT #{pageStartRow}, #{pageListSize}
  </select>

  <!-- 매출(상품별)통계 -->
  <select id="getSaleStatistics" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT TRD.ITEM_CODE
		      ,TRD.ITEM_SUBCODE
		      ,TIS.ITEM_NM
		      ,SUM(AD_MAN_CNT) AS AD_MAN_CNT_SUM
	          ,SUM(AD_WOMEN_CNT) AS AD_WOMEN_CNT_SUM
		      ,SUM(CH_MAN_CNT) AS CH_MAN_CNT_SUM
		      ,SUM(CH_WOMEN_CNT) AS CH_WOMEN_CNT_SUM
		      ,SUM(ITEM_CNT) AS ITEM_CNT_SUM
		      ,SUM(AD_MAN_SUM) AS AD_MAN_TOTAL
		      ,SUM(AD_WOMEN_SUM) AS AD_WOMEN_TOTAL
		      ,SUM(CH_MAN_SUM) AS CH_MAN_TOTAL
		      ,SUM(CH_WOMEN_SUM) AS CH_WOMEN_TOTAL
		      ,SUM(ITEM_SUM) AS ITEM_TOTAL  	      
	    FROM TB_RESERVE_DETAIL TRD 
	        LEFT OUTER JOIN (SELECT RESERVE_UID, RESERVE_STATE, RESERVE_DATE FROM TB_RESERVATION) TR ON TRD.RESERVE_UID = TR.RESERVE_UID 
	        LEFT OUTER JOIN (SELECT SET_UID,ITEM_NM FROM TB_ITEM_SETTING) TIS ON TRD.ITEM_UID = TIS.SET_UID
	    WHERE TO_DATE(TO_CHAR(TR.RESERVE_DATE, 'YYYYMMDD'), 'YYYYMMDD') BETWEEN TO_DATE(REPLACE(#{srch_date_s},'.',''), 'YYYYMMDD') AND TO_DATE(REPLACE(#{srch_date_e},'.',''), 'YYYYMMDD')	  
	    AND TR.RESERVE_STATE IN ('ING', 'USE')
	    GROUP BY TRD.ITEM_CODE, TRD.ITEM_SUBCODE, TIS.ITEM_NM
  </select>  
  
	<!-- 유입경로 통계 totCnt-->
    <select id="refererStatisticsCnt" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*)
		FROM (	SELECT REFERER
				  FROM TB_SATATISTICS_VISITOR_REFERER
				 WHERE TO_DATE(TO_CHAR(INS_DATE,'YYYYMMDD'), 'YYYYMMDD') BETWEEN TO_DATE( REPLACE(#{srch_date_s},'.',''), 'YYYYMMDD') AND TO_DATE(REPLACE(#{srch_date_e},'.',''), 'YYYYMMDD')
				 GROUP BY REFERER) 
	</select>   

 <!-- 유입경로 통계 -->
   <select id="getRefererStatistics" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT * 
			FROM ( 
					SELECT 
							rownum rn, TB.* 
					FROM (
							SELECT *
							FROM (   
									SELECT REFERER, SUM(CNT) AS SUMCNT
									  FROM TB_SATATISTICS_VISITOR_REFERER
									 WHERE TO_DATE(TO_CHAR(INS_DATE,'YYYYMMDD'), 'YYYYMMDD') BETWEEN TO_DATE( REPLACE(#{srch_date_s},'.',''), 'YYYYMMDD') AND TO_DATE(REPLACE(#{srch_date_e},'.',''), 'YYYYMMDD')
									 GROUP BY REFERER
									 ORDER BY SUMCNT DESC, REFERER ASC )
						) TB
			) WHERE rn BETWEEN #{pageListSize} * (#{page} - 1) + 1 AND #{pageListSize} * #{page}									 
  </select>   
    
  <select id="reservationListCnt" parameterType="java.util.Map" resultType="int">
  		SELECT COUNT(1)
		FROM TB_RESERVATION
		WHERE 1=1
		<include refid="where"/>
  </select>
  
  <select id="reservationList" parameterType="java.util.Map" resultType="Map" >
		SELECT * 
			FROM ( 
					SELECT 
						ROW_NUMBER() OVER(ORDER BY INS_DATE DESC) RN
						,MEM_UID
						,RESERVE_UID
						,xx1.dec_varchar2_sel(MEM_NM, 10, 'NAME') as MEM_NM
						,xx1.dec_varchar2_sel(MEM_NM, 10, 'NAME') as MASK_MEM_NM
						,TO_CHAR(RESERVE_DATE,'YY.MM.DD') AS RESERVE_DATE
						,(SELECT CODE_NM FROM TB_CODE WHERE CODE_ID = RESERVE_STATE) as RESERVE_STATE_NM
						,RESERVE_STATE
						,(SELECT CODE_NM FROM TB_CODE WHERE CODE_ID = PAYMENT_TYPE) as PAYMENT_TYPE_NM						,TO_CHAR(PAYMENT_DATE,'YY.MM.DD') AS PAYMENT_DATE
						,PAYMENT_PRICE
						,ORDER_NM
						,(ADULT_SUM + CHILD_SUM ) as TOTNUM
						,ORDER_NUM
						,(SELECT CODE_NM FROM TB_CODE WHERE TB_CODE.CODE_ID = TB_RESERVATION.POINT_CODE) POINT_NM
                        ,REFUND
                        ,PANALTY_PRICE
					FROM TB_RESERVATION
					WHERE 1=1
					<include refid="where"/>
				) WHERE rn BETWEEN #{pageListSize} * (#{page} - 1) + 1 AND #{pageListSize} * #{page}
	</select>
  
  <select id="reservationListAll" parameterType="java.util.Map" resultType="Map" >
			SELECT
				ROW_NUMBER() OVER(ORDER BY INS_DATE DESC) RN 
				,MEM_UID
				,RESERVE_UID
				,xx1.dec_varchar2_sel(MEM_NM, 10, 'NAME') as MEM_NM
				,xx1.dec_varchar2_sel(MEM_MOBILE, 10, 'PHONE') as MEM_MOBILE
				,xx1.dec_varchar2_sel(MEM_NM, 10, 'NAME') as MASK_MEM_NM
				,MASK_PHONE(xx1.dec_varchar2_sel(MEM_MOBILE, 10, 'PHONE')) as MASK_MEM_MOBILE
				,TO_CHAR(RESERVE_DATE,'YY.MM.DD') AS RESERVE_DATE
				,(SELECT CODE_NM FROM TB_CODE WHERE CODE_ID = TR.RESERVE_STATE) as RESERVE_STATE_NM
				,RESERVE_STATE
				,(SELECT CODE_NM FROM TB_CODE WHERE CODE_ID = TR.PAYMENT_TYPE) as PAYMENT_TYPE_NM
				,TO_CHAR(PAYMENT_DATE,'YY.MM.DD') AS PAYMENT_DATE
				,PAYMENT_PRICE
				,ORDER_NM
                ,(WITH AA_TEST AS (   SELECT TIS.SET_UID AS SET_UID, TPI.ITEM_NM AS ITEM_NM, TIS.ITEM_OPTION AS ITEM_OPTION 
                    FROM TB_ITEM_SETTING TIS RIGHT OUTER JOIN TB_PRD_ITEM TPI ON TIS.ITEM_CODE = TPI.ITEM_CODE 
                    WHERE TPI.CATE_CODE = '10000000' AND TPI.POINT_CODE = #{srch_point} )
                    SELECT 
                    TO_CHAR(WM_CONCAT(B.ITEM_NM)) AS ITEM_NM
                    FROM AA_TEST B WHERE (B.SET_UID = TR.SPA_ITEM OR B.SET_UID = TR.WATER_ITEM OR B.SET_UID = TR.COMPLEX_ITEM) ) AS ENTER_ITEM_NM
                ,(WITH AA_TEST AS (   SELECT TIS.SET_UID AS SET_UID, TPI.ITEM_NM AS ITEM_NM, TIS.ITEM_OPTION AS ITEM_OPTION 
                    FROM TB_ITEM_SETTING TIS RIGHT OUTER JOIN TB_PRD_ITEM TPI ON TIS.ITEM_OPTION = TPI.ITEM_CODE 
                    WHERE TPI.CATE_CODE = '10000000' AND TPI.POINT_CODE = #{srch_point} )
                    SELECT 
                    TO_CHAR(WM_CONCAT(B.ITEM_NM)) AS ITEM_NM
                    FROM AA_TEST B WHERE (B.SET_UID = TR.SPA_ITEM OR B.SET_UID = TR.WATER_ITEM OR B.SET_UID = TR.COMPLEX_ITEM) ) AS PACKAGE_ITEM_NM
				,(ADULT_SUM + CHILD_SUM ) as TOTNUM
				,ORDER_NUM
				,(SELECT CODE_NM FROM TB_CODE WHERE TB_CODE.CODE_ID = TR.POINT_CODE) POINT_NM
				,(NVL(SPA_ADULT_MAN,0) + NVL(SPA_ADULT_WOMEN,0) + NVL(SPA_CHILD_MAN,0) + NVL(SPA_CHILD_WOMEN,0) +
                   NVL(WATER_ADULT_MAN,0) + NVL(WATER_ADULT_WOMEN,0) + NVL(WATER_CHILD_MAN,0) + NVL(WATER_CHILD_WOMEN,0) +
                   NVL(COMPLEX_ADULT_MAN,0) + NVL(COMPLEX_ADULT_WOMEN,0) + NVL(COMPLEX_CHILD_MAN,0) + NVL(COMPLEX_CHILD_WOMEN,0)) AS PEOPLE_NUM
                  ,NVL(REFUND,0) AS REFUND
                  ,NVL(PANALTY_PRICE,0) AS PANALTY_PRICE
                  ,ORDER_TP
			FROM TB_RESERVATION TR
			WHERE 1=1
			<include refid="where"/>
			ORDER BY INS_DATE DESC
	</select>
    <select id="itemlist" parameterType="java.util.Map" resultType="java.util.Map">
   <![CDATA[
	SELECT CATE_CODE
	      ,ITEM_CODE
	      ,ITEM_NM
	      ,DECODE(ITEM_CODE, 'PRD001','SPA_ITEM', DECODE(ITEM_CODE, 'PRD002', 'WATER_ITEM', 'COMPLEX_ITEM')) AS COLUMN_NM
	  FROM TB_PRD_ITEM
	 WHERE CATE_CODE = '10000000'
	   AND USE_AT = 'Y'
	   AND POINT_CODE = #{srch_point}
	 ORDER BY ITEM_SORT
	]]>	
  </select>
   
   <select id="getSpaGeneralData" parameterType="java.util.Map" resultType="java.util.Map">
	   	  SELECT
	   	  	  SUM(CASE WHEN RESERVE_STATE != 'NOPMT' THEN 1 ELSE 0 END) TOT_CNT 
              ,SUM(ADULT_SUM+CHILD_SUM) AS TOT_NUM
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'ssg', PAYMENT_PRICE)),0) AS PAY_SSG
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'credit', PAYMENT_PRICE)),0) AS PAY_CREDIT
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'bank', PAYMENT_PRICE)),0) AS PAY_BANK
              ,NVL(SUM(PAYMENT_PRICE),0) AS TOT_PAY
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'ssg', REFUND)),0) AS REFUND_SSG
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'credit', REFUND)),0) AS REFUND_CREDIT
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'bank', REFUND)),0) AS REFUND_BANK
              ,NVL(SUM(REFUND),0) AS TOT_REFUND
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'ssg', PANALTY_PRICE)),0) AS PANALTY_SSG
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'credit', PANALTY_PRICE)),0) AS PANALTY_CREDIT
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'bank', PANALTY_PRICE)),0) AS PANALTY_BANK
              ,NVL(SUM(PANALTY_PRICE),0) AS TOT_PANALTY
          FROM TB_RESERVATION A, TB_PG_RESULT B
          WHERE A.PG_RESULT = B.PG_UID 
          		AND RESERVE_STATE != 'NOPMT' 
          		AND (SPA_ITEM IS NOT NULL) 
          		<include refid="whereGeneral"/>
          GROUP BY A.SPA_ITEM_NM  
   </select>
   
   
   <select id="getWaterGeneralData" parameterType="java.util.Map" resultType="java.util.Map">
          SELECT
          	  SUM(CASE WHEN RESERVE_STATE != 'NOPMT' THEN 1 ELSE 0 END) TOT_CNT 
              ,SUM(ADULT_SUM+CHILD_SUM) AS TOT_NUM
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'ssg', PAYMENT_PRICE)),0) AS PAY_SSG
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'credit', PAYMENT_PRICE)),0) AS PAY_CREDIT
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'bank', PAYMENT_PRICE)),0) AS PAY_BANK
              ,NVL(SUM(PAYMENT_PRICE),0) AS TOT_PAY
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'ssg', REFUND)),0) AS REFUND_SSG
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'credit', REFUND)),0) AS REFUND_CREDIT
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'bank', REFUND)),0) AS REFUND_BANK
              ,NVL(SUM(REFUND),0) AS TOT_REFUND
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'ssg', PANALTY_PRICE)),0) AS PANALTY_SSG
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'credit', PANALTY_PRICE)),0) AS PANALTY_CREDIT
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'bank', PANALTY_PRICE)),0) AS PANALTY_BANK
              ,NVL(SUM(PANALTY_PRICE),0) AS TOT_PANALTY
          FROM TB_RESERVATION A, TB_PG_RESULT B
          WHERE A.PG_RESULT = B.PG_UID 
          		AND RESERVE_STATE != 'NOPMT' 
          		AND (WATER_ITEM IS NOT NULL) 
          		<include refid="whereGeneral"/>
          GROUP BY A.WATER_ITEM_NM
   </select>
   
   <select id="getComplexGeneralData" parameterType="java.util.Map" resultType="java.util.Map">
          SELECT 
          	  SUM(CASE WHEN RESERVE_STATE != 'NOPMT' THEN 1 ELSE 0 END) TOT_CNT	
              ,SUM(ADULT_SUM+CHILD_SUM) AS TOT_NUM
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'ssg', PAYMENT_PRICE)),0) AS PAY_SSG
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'credit', PAYMENT_PRICE)),0) AS PAY_CREDIT
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'bank', PAYMENT_PRICE)),0) AS PAY_BANK
              ,NVL(SUM(PAYMENT_PRICE),0) AS TOT_PAY
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'ssg', REFUND)),0) AS REFUND_SSG
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'credit', REFUND)),0) AS REFUND_CREDIT
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'bank', REFUND)),0) AS REFUND_BANK
              ,NVL(SUM(REFUND),0) AS TOT_REFUND
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'ssg', PANALTY_PRICE)),0) AS PANALTY_SSG
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'credit', PANALTY_PRICE)),0) AS PANALTY_CREDIT
              ,NVL(SUM(DECODE(PAYMENT_TYPE,'bank', PANALTY_PRICE)),0) AS PANALTY_BANK
              ,NVL(SUM(PANALTY_PRICE),0) AS TOT_PANALTY
          FROM TB_RESERVATION A, TB_PG_RESULT B
          WHERE A.PG_RESULT = B.PG_UID 
          		AND RESERVE_STATE != 'NOPMT' 
          		AND (COMPLEX_ITEM IS NOT NULL) 
          		<include refid="whereGeneral"/>
          GROUP BY A.COMPLEX_ITEM_NM
   </select>
   
  
</mapper>
