<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

    <!-- Uncomment and your base-package here:
         <context:component-scan
            base-package="org.springframework.samples.web"/>  -->


	<context:component-scan base-package="com.soft.web"/>
	
	
	
	<task:annotation-driven/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- mvc:resources mapping="/common/**" location="/common/" / -->
	<mvc:resources mapping="/*.txt" location="/" />
	<mvc:resources mapping="/common/editor/**" location="/common/editor/" />
	<mvc:resources mapping="/common/front/css/**" location="/common/front/css/" />
	<mvc:resources mapping="/common/front/js/**" location="/common/front/js/" />
	<mvc:resources mapping="/common/js/**" location="/common/js/" />	
	<mvc:resources mapping="/common/front/images/**" location="/common/front/images/" />
	<mvc:resources mapping="/common/upload/**" location="/common/upload/" />		
	<mvc:resources mapping="/admaf/css/**" location="/common/admin/css/" />
	<mvc:resources mapping="/admaf/js/**" location="/common/admin/js/" />
	<mvc:resources mapping="/admaf/images/**" location="/common/admin/images/" />	

	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
	    <property name="order" value="0" />
	</bean>
	 
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	    <property name="definitions">
	     	<list>
	        	<value>/WEB-INF/tiles/tiles.xml</value>
	        </list>
	    </property>
	    <property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles3.SimpleSpringPreparerFactory"></property>
	</bean>


	<!-- bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	        <property name="prefix" value="/WEB-INF/view/"/>
	        <property name="suffix" value=".jsp"/>
	</bean-->
	
	<util:properties id="config" location="classpath:properties-dev.xml" />	
	
	<bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="#{config['oracle.driverClassName']}" />
		<property name="url" value="#{config['oracle.url']}" />
		<property name="username" value="#{config['oracle.username']}" />
		<property name="password" value="#{config['oracle.password']}" />
	    <property name="defaultAutoCommit" value="false" />
	</bean>
	
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
 				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="SQL=> " />
			</bean>
		</property>
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager" />

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	<bean id="sqlSessionFactory" class="com.soft.web.util.RefreshableSqlSessionFactoryBean">
	    <property name="dataSource" ref="dataSource"/>
	    <property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"/>
	    <property name="mapperLocations" value="classpath:/mybatis/sql/**/*.xml" />    
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	
	<!-- SMS DB -->
	<bean id="dataSourceSpiedSms" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="#{config['oracle_sms.driverClassName']}" />
		<property name="url" value="#{config['oracle_sms.url']}" />
		<property name="username" value="#{config['oracle_sms.username']}" />
		<property name="password" value="#{config['oracle_sms.password']}" />
	    <property name="validationQuery" value="SELECT 1 FROM DUAL" />
	    <property name="connectionProperties" value="autoReconnect=true;" />
	</bean>
	
	<bean id="dataSourceSms" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpiedSms" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
 				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="SQL=> " />
			</bean>
		</property>
	</bean>
	
	<tx:annotation-driven transaction-manager="txManagerSms" />

	<bean id="txManagerSms" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceSms" />
	</bean>

	<!-- 
	실서버 적용시
	<bean id="sqlSessionFactorySms" class="org.mybatis.spring.SqlSessionFactoryBean">
	테스트 적용시	
	<bean id="sqlSessionFactorySms" class="com.soft.web.util.RefreshableSqlSessionFactoryBean">
	-->
	<bean id="sqlSessionFactorySms" class="com.soft.web.util.RefreshableSqlSessionFactoryBean">
	    <property name="dataSource" ref="dataSourceSms"/>
	    <property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"/>
	    <property name="mapperLocations" value="classpath:/mybatis/sqlsms/**/*.xml" />
	</bean>

	<bean id="sqlSessionSms" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactorySms" />
	</bean>
	<!-- //SMS DB -->
	
	
	
	
	<!-- jackson 설정 -->
	<mvc:annotation-driven >
            <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        		<property name="objectMapper">                
        			<bean class="com.soft.web.converter.CustomObjectMapper" />
        		</property>
            </bean>
        	<bean class="org.springframework.http.converter.StringHttpMessageConverter"> 
        		<property name="supportedMediaTypes">                
        			<list><value>text/html;charset=UTF-8</value></list>
        		</property> 
        	</bean>     
        </mvc:message-converters>
    </mvc:annotation-driven>	
	
	<bean id="cnManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="true"/>
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="text/html" />
		<property name="useJaf" value="false"/>

		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
	</bean>
	<!-- Make this available across all of Spring MVC -->
	<mvc:annotation-driven content-negotiation-manager="cnManager" />		

	<!-- 인터셉터를 이용한 로그인 방식 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- <mvc:mapping path="/**"/> -->
			<mvc:mapping path="/secu_admaf/admin/**"/>
			<mvc:mapping path="/secu_admaf/admdesk/**"/>
			<mvc:mapping path="/mypage/**"/>
			<mvc:mapping path="/reserve/**"/>
			<!-- <mvc:exclude-mapping path="/common/**"/> -->
			<mvc:exclude-mapping path="/secu_admaf/admin/login**"/>
			<mvc:exclude-mapping path="/secu_admaf/admdesk/login**"/>
			<bean class="com.soft.web.interceptor.Interceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- Configure the multipart resolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes about 100MB -->
        <property name="maxUploadSize" value="100000000"/>
    </bean>

    
	<bean id="mailSender" class ="org.springframework.mail.javamail.JavaMailSenderImpl" >
		<property name="host" value="#{config['smtp.host']}" />
		<property name="port" value="#{config['smtp.port']}" />
		<!-- <property name="username" value="#{config['smtp.username']}" />
		<property name="password" value="#{config['smtp.password']}" /> -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
    
    <bean id="cryptography" class="com.soft.web.base.Cryptography">
		<constructor-arg index="0" value="#{config['security.aes.seed']}"/>
	</bean>

    <bean id="passwordEncoder" class="com.soft.web.base.PasswordEncoder" />

    <bean id="aquaScheduler" class="com.soft.web.crontab.AquaScheduler" />
		
</beans>
